parameters:
    level: max
    inferPrivatePropertyTypeFromConstructor: true
    excludePaths:
        - ./../src/Part1/Chapter2/CoContra/InvalidClass.php
    ignoreErrors:
        # Chapter 2
        -
            message: '#array_values#'
            path: ./../src/Part1/Chapter2/class_parents.php
        -
            message: '#always evaluate to #'
            path: ./../src/Part1/Chapter2/*
        -
            message: '#empty\(\) is not allowed#'
            path: ./../src/Part1/Chapter2/*
        -
            message: '#Only booleans are allowed in a ternary operator#'
            path: ./../src/Part1/Chapter2/truthy.php
        -
            message: '#Cannot cast#'
            path: ./../src/Part1/Chapter2/type_juggling.php
        -
            message: '#.*#'
            path: ./../src/Part1/Chapter2/type_declarations.php
        -
            message: '#Binary#'
            path: ./../src/Part1/Chapter2/string_maths.php
        -
            message: '#always true#'
            path: ./../src/Part1/Chapter2/TypeDeclarations/YeOldeDefensive.php
        -
            message: '#uninitialised has no typehint specified#'
            path: ./../src/Part1/Chapter2/uninitialised.php
        -
            message: '#.*#'
            path: ./../src/Part1/Chapter2/void.php
        # Chapter 3
        -
            message: '#Cannot cast tidy to string#'
            path: ./../src/Part1/Chapter3/ToyMVC/View/TemplateRenderer.php
        -
            message: '#Variable \$templateData might not be defined#'
            path: ./../src/Part1/Chapter3/ToyMVC/View/Template/*
        -
            message: '#getClassFullyQualifiedName\(\) should return class-string but returns string#'
            path: ./../src/Part1/Chapter3/ToyDI/ServiceLocator.php

        -
            message: '#getServiceClassString\(\) should return class-string but returns string#'
            path: ./../src/Part1/Chapter3/ToyDI/ServiceFactory.php